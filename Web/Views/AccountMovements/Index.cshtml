@{
    ViewData["Title"] = "Cari Hareketler";
    var controllerName = ViewContext.RouteData.Values["controller"].ToString();
}

<h4>@ViewData["Title"]</h4>
<hr />
<form>
    <div class="form-group row">
        <div class="col-sm-4">
            <label for="mindate" class="col-form-label">Başlangıç Tarihi</label>
            <input type="date" class="form-control param-change" id="mindate" value="@DateTime.Today.ToString("yyyy-MM-dd")">
        </div>
        <div class="col-sm-4">
            <label for="maxdate" class="col-form-label">Bitiş Tarihi</label>
            <input type="date" class="form-control param-change" id="maxdate" value="@DateTime.Today.ToString("yyyy-MM-dd")">
        </div>
    </div>
    <div class="form-group row">
        <div class="col-sm-4">
            <label for="slc-office" class="col-form-label">Şube</label>
            <select id="slc-office" class="form-control param-change"></select>
        </div>
        <div class="col-sm-4">
            <label for="slc-entity" class="col-form-label">Cari</label>
            <select id="slc-entity" class="form-control param-change"></select>
        </div>
        <div class="col-sm-4">
            <label for="slc-type" class="col-form-label">Kalem</label>
            <select id="slc-type" class="form-control param-change"></select>
        </div>
        </div>
        <div class="form-group row">
            <div class="form-group col-md-4">
                <label for="slc-vault" class="col-form-label">Kasa</label>
                <select id="slc-vault" class="form-control param-change"></select>
            </div>

    </div>

    @*<input type="button" class="btn btn-info m-1" value="Temizle" onclick="clearForm()" />*@
</form>

<div class="d-flex justify-content-end p-3">
    <a asp-controller="@controllerName" asp-action="Edit" class="btn btn-primary"><i class="fas fa-plus"></i> Ekle</a>
</div>

<table id="datatable" class="table stripe display" width="100%">
    <thead>
        <tr>
            <th>Şube</th>
            <th>Cari</th>
            <th>Kalem</th>
            <th>Borç</th>
            <th>Alacak</th>
            <th>Bakiye</th>
            <th>Kur</th>
            <th>Açıklama</th>
            <th>Tarih</th>
            <th>İşlem</th>
        </tr>
    </thead>
</table>
<hr />
<h6>Genel Toplam</h6>
<div class="row" id="div-info"></div>
<hr />
<h6>Kasa Toplam</h6>
<div class="row" id="div-info-vault"></div>

@section Scripts{
<script>
    $(document).ready(function () {
        $('#datatable').DataTable({
            language: {
                url: '/lib/datatable/tr/tr.json'
            },
            dom: 'Bfrtip',
            buttons: [
                'copy', 'csv', 'excel', 'pdf', 'print', 'pageLength'
            ],
            "processing": true, // for show progress bar
            "serverSide": true, // for process server side
            "pagination": true,
            "filter": true, // this is for disable filter (search box)
            "ordering": false,
            //"orderMulti": false, // for disable multiple column at once

            "ajax": {
                url: "/@controllerName/GetDataTable",
                type: 'POST',
                contentType: "application/json",
                data: function (d) {
                    let res = buildModel(d);
                    return JSON.stringify(res);
                }
            },
            "columns": [
                { "data": "officeName", },
                { "data": "entityName" },
                { "data": "typeName" },
                {
                    "data": "expense",
                    render: function (data, type, row) {
                        return data.toFixed(2);
                    }
                },
                {
                    "data": "income",
                    render: function (data, type, row) {
                        return data.toFixed(2);
                    }
                },
                {
                    "data": "null",
                    render: function (data, type, row) {
                        return (row.income - row.expense).toFixed(2);
                    }
                },
                { "data": "currencyName" },
                { "data": "description" },
                {
                    "data": "date",
                    render: function (data, type, row) {
                        return (new Date(data)).toLocaleDateString('tr-TR');
                    } },
                {
                    "data": "id",
                    render: function (data, type, row) {
                        return '<a href="/@controllerName/Edit/' + data + '" class="btn btn-sm btn-warning m-1"><i class="fas fa-edit"></i></button>' +
                            '<a onclick="deletePrompt(' + data + ')" class="btn btn-sm btn-danger m-1"><i class="fas fa-trash"></i></button>';
                    }
                }
            ]

        });

        setSelect('/Offices/GetForDropDown', 'slc-office')
        setSelect('/AccountEntities/GetForDropDown', 'slc-entity')
        setSelect('/AccountTypes/GetForDropDown', 'slc-type')
        setSelect('/AccountVault/GetForDropDown', 'slc-vault')

        buildInfoSection();
    });

    function deletePrompt(id) {
        alertify.confirm("Sil", "Silme işlemini onaylıyor musunuz?",
            function () {
                let model = { id: id }
                $.ajax({
                    url: '/@controllerName/Delete',
                    type: 'post',
                    contentType: "application/json",
                    data: JSON.stringify(model),
                    success: function (res) {
                        if (res.error === false) {
                            alertify.success("İşlem Başarılı");
                            $('#datatable').DataTable().ajax.reload();
                            buildInfoSection();
                        } else {
                            alertify.error("İşlem Başarısız");
                            console.log(res);
                        }
                    }
                })
            }, null)
    }

    $('.param-change').change(function () {
        refreshTable();
        //buildInfoSection();
    })
    function clearForm() {
        $("#slc-type").val("").change();
        $("#slc-entity").val("").change();
        $("#slc-office").val("").change();
        $("#slc-vault").val("").change();
        $('.param-change').val(null);
        refreshTable();
    }
    function refreshTable() {
        $('#datatable').DataTable().ajax.reload();
    }
    const buildInfoSection = () => {
        var model = {};
        $.ajax({
            url: '/@controllerName/GetSummary',
            type: 'post',
            contentType: "application/json",
            data: JSON.stringify(buildModel(model)),
            success: function (res) {
                var str = ``;
                res.general.map(item =>{
                    str += `<div class="card m-2" style="width: 10rem;">
                                <div class="card-header text-center">`+item.currencyName+`</div>
                                <ul class="list-group list-group-flush">
                                    <li class="list-group-item text-success"><span class="float-right">`+item.income.toFixed(2)+`</span></li>
                                    <li class="list-group-item text-danger"><span class="float-right">`+ item.expense.toFixed(2)+`</span></li>
                                    <li class="list-group-item float-right"><span class="float-right">`+ (item.income - item.expense).toFixed(2)+`</span></li>
                                </ul>
                            </div>`
                })
                $('#div-info').html(str);
                var strVault = ``;
                res.vault.map(item =>{
                    strVault += `<div class="card m-2" style="width: 10rem;">
                                <div class="card-header text-center">`+ item.vaultName +`<br>`+item.currencyName+`</div>
                                <ul class="list-group list-group-flush">
                                    <li class="list-group-item text-success"><span class="float-right">`+ item.income.toFixed(2)+`</span></li>
                                    <li class="list-group-item text-danger"><span class="float-right">`+ item.expense.toFixed(2)+`</span></li>
                                    <li class="list-group-item float-right"><span class="float-right">`+ (item.income - item.expense).toFixed(2)+`</span></li>
                                </ul>
                            </div>`
                })
                $('#div-info-vault').html(strVault);
            }
        })
    }
    const buildModel = (d) => {
        let officeId = $("#slc-office").val() || 0;
        d.officeId = officeId;
        let entityId = $("#slc-entity").val() || 0;
        d.entityId = entityId;
        let typeId = $("#slc-type").val() || 0;
        d.typeId = typeId;
        let vaultId = $("#slc-vault").val() || 0;
        d.vaultId = vaultId;

        let date1 = $('#mindate').val();
        let date2 = $('#maxdate').val();
        d.minDate = date1 ? new Date(date1) : null;
        d.maxDate = date2 ? new Date(date2) : null;
        return d;
    }
</script>
}